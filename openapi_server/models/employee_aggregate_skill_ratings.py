# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class EmployeeAggregateSkillRatings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skill=None, rating=None):  # noqa: E501
        """EmployeeAggregateSkillRatings - a model defined in OpenAPI

        :param skill: The skill of this EmployeeAggregateSkillRatings.  # noqa: E501
        :type skill: str
        :param rating: The rating of this EmployeeAggregateSkillRatings.  # noqa: E501
        :type rating: int
        """
        self.openapi_types = {
            'skill': str,
            'rating': int
        }

        self.attribute_map = {
            'skill': 'skill',
            'rating': 'rating'
        }

        self._skill = skill
        self._rating = rating

    @classmethod
    def from_dict(cls, dikt) -> 'EmployeeAggregateSkillRatings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmployeeAggregateSkillRatings of this EmployeeAggregateSkillRatings.  # noqa: E501
        :rtype: EmployeeAggregateSkillRatings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skill(self):
        """Gets the skill of this EmployeeAggregateSkillRatings.

        Skill that the consultant was rated on  # noqa: E501

        :return: The skill of this EmployeeAggregateSkillRatings.
        :rtype: str
        """
        return self._skill

    @skill.setter
    def skill(self, skill):
        """Sets the skill of this EmployeeAggregateSkillRatings.

        Skill that the consultant was rated on  # noqa: E501

        :param skill: The skill of this EmployeeAggregateSkillRatings.
        :type skill: str
        """

        self._skill = skill

    @property
    def rating(self):
        """Gets the rating of this EmployeeAggregateSkillRatings.

        Aggregate skill rating for the above skill  # noqa: E501

        :return: The rating of this EmployeeAggregateSkillRatings.
        :rtype: int
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this EmployeeAggregateSkillRatings.

        Aggregate skill rating for the above skill  # noqa: E501

        :param rating: The rating of this EmployeeAggregateSkillRatings.
        :type rating: int
        """

        self._rating = rating
