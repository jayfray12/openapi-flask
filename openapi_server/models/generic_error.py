# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class GenericError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, root_cause=None):  # noqa: E501
        """GenericError - a model defined in OpenAPI

        :param message: The message of this GenericError.  # noqa: E501
        :type message: str
        :param root_cause: The root_cause of this GenericError.  # noqa: E501
        :type root_cause: str
        """
        self.openapi_types = {
            'message': str,
            'root_cause': str
        }

        self.attribute_map = {
            'message': 'message',
            'root_cause': 'rootCause'
        }

        self._message = message
        self._root_cause = root_cause

    @classmethod
    def from_dict(cls, dikt) -> 'GenericError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GenericError of this GenericError.  # noqa: E501
        :rtype: GenericError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this GenericError.

        Specific error message  # noqa: E501

        :return: The message of this GenericError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GenericError.

        Specific error message  # noqa: E501

        :param message: The message of this GenericError.
        :type message: str
        """

        self._message = message

    @property
    def root_cause(self):
        """Gets the root_cause of this GenericError.

        Optional root rootCause  # noqa: E501

        :return: The root_cause of this GenericError.
        :rtype: str
        """
        return self._root_cause

    @root_cause.setter
    def root_cause(self, root_cause):
        """Sets the root_cause of this GenericError.

        Optional root rootCause  # noqa: E501

        :param root_cause: The root_cause of this GenericError.
        :type root_cause: str
        """

        self._root_cause = root_cause
